2-matrix_divided.py
===================

Defines a matrix division function ``matrix_divided(matrix, div)``.

How to Use
==========

``matrix_divided(...)`` returns a new matrix which is a copy of the parameter
``matrix`` with all elements divided by ``div``.
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...     [4, 8, 12],
	...     [16, 20, 24]
	... ]
	>>> print(matrix_divided(matrix, 4))
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]


Dividends are approximated to at most two decimal places.
	>>> matrix = [
	...     [1, 2, 3],
	...     [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 6))
	[[0.17, 0.33, 0.5], [0.67, 0.83, 1.0]]


Dividing floating-point numbers.
	>>> matrix = [
	...     [2.2, -3.3, 4.4],
	...     [5.5, 6.6, -7.7]
	... ]
	>>> print(matrix_divided(matrix, 2))
	[[1.1, -1.65, 2.2], [2.75, 3.3, -3.85]]


Combining Integers and floats
	>>> matrix = [
	...     [1, -2.2, 3, 4.4, 5],
	...     [-6.6, 7.00, 8, 9.999, 10]
	... ]
	>>> print(matrix_divided(matrix, 10))
	[[0.1, -0.22, 0.3, 0.44, 0.5], [-0.66, 0.7, 0.8, 1.0, 1.0]]


Where ``matrix`` is not a list of lists consisting of either floats or integer
	>>> matrix = "not a list"
	>>> print(matrix_divided(matrix, 5))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = None
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Where ``matrix`` is an empty list
	>>> matrix = []
	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Where ``matrix`` is an empty list of lists
	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 9))
	[[]]


Where ``matrix`` is not specifically a list of lists
	>>> matrix = [6, 12, 18]
	>>> print(matrix_divided(matrix, 6))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Where ``matrix`` are neither integers nor floats
        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, "not a number", 6]
        ... ]
        >>> print(matrix_divided(matrix, 1))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Where all the rows in the ``matrix`` are different sizes
        >>> matrix = [
        ...     [1, 2, 3, 4],
        ...     [5, 6, 7]
        ... ]
        >>> print(matrix_divided(matrix, 9))
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size


Where the parameter ``div`` is neither an integer or a float
        >>> matrix = [
        ...     [1, 2, 3],
        ...     [4, 5, 6]
        ... ]
        >>> print(matrix_divided(matrix, "not a number"))
        Traceback (most recent call last):
        TypeError: div must be a number


Where the parameter ``div`` is zero
        >>> print(matrix_divided(matrix, 0))
        Traceback (most recent call last):
	ZeroDivisionError: division by zero
